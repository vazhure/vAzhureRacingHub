// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace KartKraft
{

    using global::FlatBuffers;

    /// Useful generic color struct 
    public struct Color : IFlatbufferObject
    {
        private Struct __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
        public Color __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public sbyte R { get { return __p.bb.GetSbyte(__p.bb_pos + 0); } }
        public sbyte G { get { return __p.bb.GetSbyte(__p.bb_pos + 1); } }
        public sbyte B { get { return __p.bb.GetSbyte(__p.bb_pos + 2); } }

        public static Offset<KartKraft.Color> CreateColor(FlatBufferBuilder builder, sbyte R, sbyte G, sbyte B)
        {
            builder.Prep(1, 3);
            builder.PutSbyte(B);
            builder.PutSbyte(G);
            builder.PutSbyte(R);
            return new Offset<KartKraft.Color>(builder.Offset);
        }
    };


}
